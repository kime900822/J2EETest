<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
	"http://struts.apache.org/dtds/struts-2.5.dtd">

<!-- START SNIPPET: xworkSample -->
<struts>

	<!-- 配置web默认编码集 -->
	<constant name="struts.custom.i18n.resources" value="UTF-8" />
	<!-- 默认请求后缀是action，配置之后请求后缀可以是action/do -->
	<constant name="struts.action.extension" value="action,do" />
	<!-- 设置浏览器是否缓存静态内容，默认值true。我们开发阶段建议关闭， 防止修改后测试不到 -->
	<constant name="struts.server.static.browserCache" value="false" />
	<!-- 当struts配置文件修改后，系统是否重新加载该文件。默认为false。开发阶段建议为true， -->
	<constant name="struts.configuratio.xml.reload" value="true" />
	<!-- 开发模式下，这样可以打印出更加详细的错误i -->
	<constant name="struts.devMode" value="true" />
	<!-- 开启动态方法调用 -->
	<constant name="struts.enable.DynamicMethodInvocation" value="true"></constant>
	<!-- 默认视觉主题 这个配置之后label什么都不会显示-->
	<!-- <constant name="struts.ui.theme" value="simple" /> -->
	<package name="Struts 2" extends="struts-default">
		<interceptors>
			<interceptor name="executeTime" class="interceptor.ExecuteTimeInterceptor">
				<param name="name">执行时间</param>
			</interceptor>
			<interceptor-stack name="customStack">
				<interceptor-ref name="defaultStack"></interceptor-ref>
				<interceptor-ref name="executeTime"></interceptor-ref>
			</interceptor-stack>
		</interceptors>
		<!-- 配置默认拦截器 -->
		<default-interceptor-ref name="customStack"></default-interceptor-ref>
		<!-- 配置默认action -->
		<default-action-ref name="login"></default-action-ref>
		<!-- 允许通配符配置 -->
		<global-allowed-methods>regex:.*</global-allowed-methods>
		<action name="query" class="kime.struts2.QueryAction">
			<result name="success">/struts2/result.jsp</result>
			<result name="error">/struts2/error.jsp</result>
		</action>

		<action name="login" class="kime.struts2.LoginAction">
			<result name="queryBooks">/struts2/queryBooks.jsp</result>
			<result name="success">/struts2/success.jsp</result>
			<result name="error">/struts2/error.jsp</result>
			<!-- 允许动态方法 -->
			<allowed-methods>queryBooks</allowed-methods>
		</action>

		<action name="loginaware" class="kime.struts2.LoginAwareAction">
			<result name="success">/struts2/success.jsp</result>
			<result name="error">/struts2/error.jsp</result>
		</action>

		<action name="*Books" class="kime.struts2.Loginwildcard"
			method="{1}">
			<result name="add">/struts2/error.jsp</result>
			<result name="query">/struts2/queryBooks.jsp</result>
			<result name="edit">/struts2/success.jsp</result>
		</action>

		<action name="loginOfModel" class="kime.struts2.LoginOfModelAction">			
			<result name="success">/struts2/success.jsp</result>
			<result name="error">/struts2/error.jsp</result>
		</action>
		
		<!-- 类型转换 -->
		<action name="product" class="kime.struts2.ProductAction">			
			<result name="success">/struts2/productview.jsp</result>
		</action>

		<!-- 输入校验 -->
		<action name="register" class="kime.struts2.RegisterAction" method="register">			
			<result name="success">/struts2/success.jsp</result>
			<!-- 直接在每个UI上方显示 -->
			<!--<result name="input">/struts2/register_Struts2.jsp</result>-->
			<!-- 新页面显示 -->
			<result name="input">/struts2/input.jsp</result>
		</action>
		
		
	</package>
</struts>

<!-- END SNIPPET: xworkSample -->

